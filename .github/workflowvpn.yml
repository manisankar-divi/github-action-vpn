# action.yml
name: 'GitHub Action VPN'
author: 'Unknow.sk'
description: 'Establish OpenVPN, PPTP, L2TP, WireGuard, FortiClient or Cisco AnyConnect VPN connection on Github Actions.'
branding:
  icon: "shield"
  color: "gray-dark"
inputs:
  VPN_OS:
    description: 'Type of OS on which the commands will be executed. Supported "ubuntu" (default).'
    default: 'ubuntu'
    required: false
  VPN_TYPE:
    description: 'Type of VPN connection. Supported "pptp", "l2tp", "wireguard", "forticlient", "cisco", or "openvpn" (default).'
    default: 'openvpn'
    required: false
  VPN_USER:
    description: 'Username for VPN connection.'
    required: true
  VPN_PASSWORD:
    description: 'Password for VPN connection.'
    required: true
  VPN_SERVER:
    description: 'Host name or IP address of VPN server.'
    required: true
  VPN_PSK:
    description: 'Shared secret key for VPN connection. Required for L2TP.'
    required: false
  VPN_CONFIG:
    description: 'Content of VPN configuration file. Required for OpenVPN and WireGuard.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Echo VPN Inputs
      if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
      run: |
        echo "${{ github.action_path }}" >> $GITHUB_ACTION_PATH
        echo "${{ inputs.VPN_OS }}" >> $VPN_OS
        echo "${{ inputs.VPN_TYPE }}" >> $VPN_TYPE
        echo "${{ inputs.VPN_USER }}" >> $VPN_USER
        echo "${{ inputs.VPN_PASSWORD }}" >> $VPN_PASSWORD
        echo "${{ inputs.VPN_SERVER }}" >> $VPN_SERVER
        echo "${{ inputs.VPN_PSK }}" >> $VPN_PSK
        echo "${{ inputs.VPN_CONFIG }}" >> $VPN_CONFIG
      shell: bash
    - name: Echo VPN Inputs (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        echo $env:GITHUB_ACTION_PATH >> $env:GITHUB_ACTION_PATH
        echo $env:VPN_OS >> $env:VPN_OS
        echo $env:VPN_TYPE >> $env:VPN_TYPE
        echo $env:VPN_USER >> $env:VPN_USER
        echo $env:VPN_PASSWORD >> $env:VPN_PASSWORD
        echo $env:VPN_SERVER >> $env:VPN_SERVER
        echo $env:VPN_PSK >> $env:VPN_PSK
        echo $env:VPN_CONFIG >> $env:VPN_CONFIG
      shell: powershell
    - id: vpn-wireguard
      if: ${{ inputs.VPN_CONFIG == 'wireguard' && matrix.os == 'ubuntu-latest' }}
      run: script/wireguard.sh
      shell: bash
    - id: vpn-openvpn
      if: ${{ inputs.VPN_CONFIG == 'openvpn' && matrix.os == 'ubuntu-latest' }}
      run: script/openvpn.sh
      shell: bash
    - id: vpn-l2tp
      if: ${{ inputs.VPN_CONFIG == 'l2tp' && matrix.os == 'ubuntu-latest' }}
      run: script/l2tp.sh
      shell: bash
    - id: vpn-pptp
      if: ${{ inputs.VPN_CONFIG == 'pptp' && matrix.os == 'ubuntu-latest' }}
      run: script/pptp.sh
      shell: bash
    - id: vpn-forticlient
      if: ${{ inputs.VPN_CONFIG == 'forticlient' && matrix.os == 'ubuntu-latest' }}
      run: script/pptp.sh
      shell: bash
    - id: vpn-cisco
      if: ${{ inputs.VPN_CONFIG == 'cisco' && matrix.os == 'ubuntu-latest' }}
      run: script/cisco-anyconnect.sh
      shell: bash
